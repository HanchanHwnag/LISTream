<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	<!-- 모든 User 선택 -->
	<select id="selectAll" resultType="spring.project.db.UserVO">
		select * from user_info where id not in ('admin1', 'admin2', 'admin3', 'admin4', 'admin5')
	</select>
	<!-- 특정 User 선택 -->
	<select id="selectOne" resultType="spring.project.db.UserVO">
		select * from user_info where id = #{id}
	</select>
	<!-- Genre 선택 -->
	<select id="selectGenre" resultType="spring.project.db.GenreVO">
		select * from genre
	</select>
	<!-- User 삽입 -->
	<insert id="insertOne" parameterType="spring.project.db.UserVO">
		insert into user_info values(user_info_seq.nextval, #{id}, #{pwd}, #{name}, #{email})
	</insert>
	<!-- Music 삽입 -->
	<insert id="insertMusic" parameterType="spring.project.db.MusicVO">
		insert into music values(music_seq.nextval, #{artist}, #{music_title}, #{path}, 0, sysdate, #{genre_code})
	</insert>
	<!-- User totalCount 검색 -->
	<select id="userTotalCount" resultType="Integer">
		select count(*) from user_info  where id not in ('admin1', 'admin2', 'admin3', 'admin4', 'admin5')
	</select>
	<!-- User 검색 -->
	<select id="selectUser" parameterType="java.util.Map" resultType="spring.project.db.UserVO">
		select * from (
			select rownum r_num, a.* from 
				(select * from user_info where id not in ('admin1', 'admin2', 'admin3', 'admin4', 'admin5')) a order by r_num
		) where r_num between #{begin} and #{end}
	</select>
	<!-- User 삭제 -->
	<delete id="deleteUser" parameterType="java.util.List">
		delete from user_info where user_info_code = #{user_info_code}
	</delete>
	<!-- USer Search 기능 -->
	<select id="searchUser" resultType="spring.project.db.UserVO" parameterType="String">
		select * from (
			select rownum r_num, a.* from 
				(select * from user_info where id = #{id} and id not in ('admin1', 'admin2', 'admin3', 'admin4', 'admin5')) a
		) 
	</select>
	<!-- Music 관련 -->
	
	<!-- 음악 검색 -->
	<select id="searchMusic" resultType="spring.project.db.MusicVO" parameterType="String">
		select * from (
			select rownum r_num, a.* from (
				(select * from music where lower(music_title) LIKE '%' || lower(#{music_title}) || '%' order by music_hit desc) a)
			) where r_num <![CDATA[<]]> 7
	</select>
	<select id="selectMusic" resultType="spring.project.db.MusicVO" parameterType="String">
		select rownum r_num, a.* from (
			(select * from music where lower(music_title) = lower(#{music_title}) order by music_hit desc) a)
	</select>
	<!-- MusicList 삽입 -->
	<insert id="insertMusicList" parameterType="java.util.Map">
		insert into musiclist values(musiclist_seq.nextval,#{music_code},#{playlist_code})
	</insert>
</mapper>